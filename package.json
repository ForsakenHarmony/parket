{
  "name": "parket",
  "version": "1.0.0-canary.1",
  "description": "A small reactiveâ„¢ library to manage application state, heavily inspired by mobx-state-tree",
  "source": "src/index_new.ts",
  "typings": "dist/index.d.ts",
  "module": "dist/es/index.js",
  "main": "dist/parket.js",
  "umd:main": "dist/parket.umd.js",
  "scripts": {
    "test": "npm run build && npm run jest",
    "jest": "jest",
    "build": "run-p --silent build:*",
    "build:ts": "tsc",
    "build:main": "microbundle -f umd,cjs",
    "build:integrations": "microbundle src/integration/*.js -o x.js -f cjs",
    "build:devtools": "microbundle src/devtools.js -o devtools.js -f cjs",
    "prepare": "npm t",
    "precommit": "lint-staged",
    "prettier": "prettier --write {src,test,examples/**/src}/**/*.{js,ts}"
  },
  "prettier": {
    "singleQuote": true,
    "trailingComma": "es5"
  },
  "repository": "ForsakenHarmony/parket",
  "keywords": [
    "state",
    "state machine",
    "preact",
    "react",
    "redux"
  ],
  "files": [
    "src",
    "dist",
    "preact.js",
    "preact.js.map",
    "react.js",
    "react.js.map",
    "devtools.js",
    "devtools.js.map"
  ],
  "author": "Leah <me@hrmny.pw>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/ForsakenHarmony/parket/issues"
  },
  "homepage": "https://github.com/ForsakenHarmony/parket#readme",
  "dependencies": {
    "mitt": "^1.1.3"
  },
  "peerDependencies": {
    "preact": "*",
    "react": "*"
  },
  "devDependencies": {
    "@types/jest": "^22.2.0",
    "babel-jest": "^22.1.0",
    "babel-plugin-jsx-pragmatic": "^1.0.2",
    "babel-plugin-transform-react-jsx": "^6.24.1",
    "babel-preset-env": "^1.6.1",
    "husky": "^0.14.3",
    "jest": "^22.1.4",
    "lint-staged": "^7.0.0",
    "microbundle": "^0.4.1",
    "np": "^2.18.3",
    "npm-run-all": "^4.1.2",
    "preact": "^8.2.7",
    "prettier": "^1.10.2",
    "react": "^16.2.0",
    "react-dom": "^16.2.0",
    "ts-jest": "^22.4.2",
    "typescript": "^2.7.2"
  },
  "lint-staged": {
    "*.{js,ts}": [
      "prettier --write",
      "git add"
    ]
  },
  "jest": {
    "verbose": true,
    "transform": {
      "^.+\\.js$": "babel-jest",
      "^.+\\.tsx?$": "ts-jest"
    },
    "testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",
    "globals": {
      "NODE_ENV": "test"
    },
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node"
    ]
  }
}
